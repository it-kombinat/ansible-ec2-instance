---
- name: Create a security group
  ec2_group:
    name: "{{ security_group }}"
    description: Security Group for webserver Servers
    region: "{{ region }}"
    rules: "{{ sec_grp_in }}"
    rules_egress: "{{ sec_grp_out }}"
  register: basic_firewall

- name: Launch the new EC2 Instance for {{ inventory_group }}
  ec2:
    group: "{{ security_group }}"
    instance_type: "{{ instance_type}}"
    image: "{{ image }}"
    wait: true
    region: "{{ region }}"
    keypair: "{{ keypair }}"
-   count_tag:
      Name: "{{ ec2tag }}"
    exact_count: "{{ count }}"
  register: ec2

- name: Add the newly created EC2 instance(s) to the local host group
  add_host:
    name: "{{ item.public_ip }}"
    groups: "{{ inventory_group }}"
  with_items: "{{ ec2.instances }}"

- name: Wait for SSH to come up
  wait_for:
    host: "{{ item.public_ip }}"
    port: 22
    state: started
  with_items: "{{ ec2.instances }}"

- name: Add tag to Instance(s)
  ec2_tag:
    resource: "{{ item.id }}"
    region: "{{ region }}"
    state: present
  with_items: "{{ ec2.instances }}"
  args:
    tags:
      Name: "{{ ec2tag }}"

- name: Create and attach Volume 1
  ec2_vol:
    instance: "{{ item.id }}"
    volume_size: "{{ ec2_vol_size | default('10') }}"
    device_name: "{{ ec2_dev_name1 }}"
    delete_on_termination: "{{ ec2_vol_persistent | default('yes') }}"  
  with_items: "{{ ec2.instances }}"
  when: 
    - ec2_vol_add
    - ec2_dev_name1 is defined

- name: Create and attach Volume 2
  ec2_vol:
    instance: "{{ item.id }}"
    volume_size: "{{ ec2_vol_size | default('10') }}"
    device_name: "{{ ec2_dev_name2 }}"
    delete_on_termination: "{{ ec2_vol_persistent | default('yes') }}"
  with_items: "{{ ec2.instances }}"
  when: 
    - ec2_vol_add
    - ec2_dev_name2 is defined

- name: Create and attach Volume 3
  ec2_vol:
    instance: "{{ item.id }}"
    volume_size: "{{ ec2_vol_size | default('10') }}"
    device_name: "{{ ec2_dev_name3 }}"
    delete_on_termination: "{{ ec2_vol_persistent | default('yes') }}"
  with_items: "{{ ec2.instances }}"
  when:
    - ec2_vol_add
    - ec2_dev_name3 is defined

# DNS Section

- name: create identifier sequence for tagging
  debug: msg="{{ item }}"
  with_sequence: start="{{ dyn_host_id | default('1') }}" count="{{ count }}" format="%02d"
  no_log: true
  register: sequence

- name: Add/Update DNS entry
  route53:
    state: present
    overwrite: true
    zone: "{{ dyn_zone }}"
    #record: "{{ dyn_hostname }}"
    record: "{{ dyn_dns_pre | default('server') }}-{{ item.1.msg }}.{{dyn_zone}}"
    type: A
    ttl: 600
    value: "{{ item.0.public_ip }}"
    #value: "{{ groups['splunk'] }}"
  when: dyn_dns
  with_together:
    - "{{ ec2.instances }}"
    - "{{ sequence.results }}"